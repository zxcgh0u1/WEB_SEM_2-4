const express = require("express");
const path = require("path");
const helmet = require("helmet"); // üîπ –∑–∞—â–∏—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
const { initBot } = require("../bot/bot");

const volunteerRoutes = require("./routes/volunteerRoutes");
const eventRoutes = require("./routes/eventRoutes");
const organizerRoutes = require("./routes/organizerRoutes");
const participationRoutes = require("./routes/participationRoutes");
const reportRoutes = require("./routes/reportRoutes");
const requestsRoutes = require("./routes/requestsRoutes");
const askRoutes = require("./routes/askRoutes");

const app = express();
const PORT = process.env.PORT || 3000;

// üîí middleware –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å –º—è–≥–∫–∏–º CSP
app.use(
  helmet({
    contentSecurityPolicy: {
      useDefaults: true,
      directives: {
        "script-src": ["'self'", "'unsafe-inline'"], // —Ä–∞–∑—Ä–µ—à–∞–µ–º inline JS
        "script-src-attr": ["'unsafe-inline'"],      // —Ä–∞–∑—Ä–µ—à–∞–µ–º onclick/onload
      },
    },
  })
);

app.disable("x-powered-by"); // —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
app.use(express.json({ limit: "100kb" })); // –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —Ä–∞–∑–º–µ—Ä —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
app.use(express.urlencoded({ extended: true, limit: "100kb" }));

// üîπ —Ä–∞–∑–¥–∞—ë–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (index.html, css, js –∏ —Ç.–ø.)
app.use(express.static(path.join(__dirname, "../client")));

// üîπ API –º–∞—Ä—à—Ä—É—Ç—ã
app.use("/api/volunteers", volunteerRoutes);
app.use("/api/events", eventRoutes);
app.use("/api/organizers", organizerRoutes);
app.use("/api/participation", participationRoutes);
app.use("/api/reports", reportRoutes);
app.use("/api/requests", requestsRoutes);
app.use("/api/ask", askRoutes);

// üîπ –µ—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –∫–æ—Ä–µ–Ω—å ‚Äî –æ—Ç–¥–∞—ë–º index.html
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "../client/index.html"));
});

app.listen(PORT, () => {
  console.log(`‚úÖ Server running at http://localhost:${PORT}`);
  initBot(); // –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤–º–µ—Å—Ç–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
});
