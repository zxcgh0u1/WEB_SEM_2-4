const express = require("express");
const axios = require("axios");
const router = express.Router();

// üîπ –ö–æ–Ω—Ñ–∏–≥ GigaChat
const AUTH_URL = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth";
const CHAT_URL = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions";

// –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
const CLIENT_ID = "dee304aa-b762-443e-bfee-4323cb80d4de";
const AUTH_KEY = "ZGVlMzA0YWEtYjc2Mi00NDNlLWJmZWUtNDMyM2NiODBkNGRlOjMyYTA4MzMwLTY0ODYtNDY2NC1hNTRlLWJmNjg0ODhkOTYzMg==";
const SCOPE = "GIGACHAT_API_PERS";

// –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
let accessToken = null;

// ================== –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ ==================
async function getAccessToken() {
  try {
    const res = await axios.post(
      AUTH_URL,
      `scope=${SCOPE}`,
      {
        headers: {
          Authorization: `Basic ${AUTH_KEY}`,
          "Content-Type": "application/x-www-form-urlencoded",
          RqUID: CLIENT_ID,
        },
        httpsAgent: new (require("https").Agent)({ rejectUnauthorized: false }), // ‚ö†Ô∏è –∏–≥–Ω–æ—Ä —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
      }
    );
    accessToken = res.data.access_token;
    console.log("‚úÖ GigaChat token –æ–±–Ω–æ–≤–ª—ë–Ω");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ GigaChat —Ç–æ–∫–µ–Ω–∞:", err.response?.data || err.message);
  }
}

// –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
getAccessToken();
// –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑ –≤ 25 –º–∏–Ω—É—Ç
setInterval(getAccessToken, 25 * 60 * 1000);

// ================== /api/ask ==================
// ================== /api/ask ==================
router.post("/", async (req, res) => {
  try {
    const question = (req.body && (req.body.question ?? req.body.message ?? req.body.q))?.toString().trim();
    if (!question) {
      return res.status(400).json({ error: "–í–æ–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π" });
    }

    if (!accessToken) {
      return res.status(500).json({ error: "–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ GigaChat" });
    }

    const gRes = await axios.post(
      CHAT_URL,
      {
        model: "GigaChat:latest",
        messages: [{ role: "user", content: question }],
      },
      {
        headers: {
          Authorization: `Bearer ${accessToken}`,
          "Content-Type": "application/json",
        },
        httpsAgent: new (require("https").Agent)({ rejectUnauthorized: false }),
      }
    );

    const answer = gRes.data.choices?.[0]?.message?.content || "‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞";
    res.json({ answer });
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ /ask:");
    console.error("–°—Ç–∞—Ç—É—Å:", err.response?.status);
    console.error("–û—Ç–≤–µ—Ç:", JSON.stringify(err.response?.data, null, 2)); // –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ GigaChat", details: err.response?.data || err.message });
  }
});

module.exports = router;
